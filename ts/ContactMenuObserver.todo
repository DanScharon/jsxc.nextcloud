function observeContactsMenu() {
    var target = document.getElementById('contactsmenu');

    var observer = new MutationObserver(function (mutations) {
        mutations.forEach(function (mutation) {
            if (mutation.target.id !== 'contactsmenu-contacts') {
                return;
            }

            $(mutation.target).find('[href^="xmpp:"]').addClass('jsxc_statusIndicator');

            $(mutation.target).find('.contact').each(function () {
                updateContactItem($(this));
            });

            jsxc.gui.detectUriScheme(mutation.target);
        });
    });

    var config = {
        attributes: true,
        childList: true,
        characterData: true,
        subtree: true
    };

    observer.observe(target, config);
}

function updateContactItem(contactElement) {
    var xmppAddresses = contactElement.find('[href^="xmpp:"]').map(function () {
        return $(this).attr('href').replace(/^xmpp:/, '');
    });

    if (xmppAddresses.length === 0) {
        return;
    }

    var lastMessages = [];
    var highestPresent = jsxc.CONST.STATUS.indexOf('offline');
    var highestPresentBid = xmppAddresses.get(0);

    xmppAddresses.each(function (index, bid) {
        var lastMsg = jsxc.getLastMsg(bid);

        if (lastMsg) {
            lastMessages.push(lastMsg);
        }

        var data = jsxc.storage.getUserItem('buddy', bid) || {};

        if (data.status > highestPresent) {
            highestPresent = data.status;
            highestPresentBid = bid;
        }
    });

    var latestMsg = {
        date: 0
    };
    $(lastMessages).each(function (index, msg) {
        if (msg.date > latestMsg.date) {
            latestMsg = msg;
        }
    });

    if (latestMsg.date > 0) {
        // replace emoticons from XEP-0038 and pidgin with shortnames
        $.each(jsxc.gui.emotions, function (i, val) {
            latestMsg.text = latestMsg.text.replace(val[2], ':' + val[1] + ':');
        });

        // translate shortnames to images
        latestMsg.text = jsxc.gui.shortnameToImage(latestMsg.text);

        contactElement.find('.last-message').html(latestMsg.text);
    }

    if (highestPresent > 0) {
        var status = jsxc.CONST.STATUS[highestPresent];

        contactElement.removeClass('jsxc_' + jsxc.CONST.STATUS.join(' jsxc_')).addClass('jsxc_' + status);
    }

    if (highestPresentBid) {
        contactElement.find('.avatar').click(function () {
            jsxc.gui.queryActions.message(highestPresentBid);
        });
    }
}